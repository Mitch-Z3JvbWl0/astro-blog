---
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';
import { Image } from 'astro:assets';

// Extend the type to include optional 'tags'
type BlogFrontmatter = {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  heroImage?: {
    src: string;
    width: number;
    height: number;
    format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
  };
  tags?: string[];
};

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
) as { id: string; data: BlogFrontmatter }[];

// Ensure each post has a tags array (fallback to empty array if missing)
posts.forEach(post => {
  if (!Array.isArray(post.data.tags)) {
    post.data.tags = [];
  }
});

// Pagination logic (adjust per-page as needed)
const perPage = 5;
const page = Number(Astro.url.searchParams.get('page')) || 1;
const start = (page - 1) * perPage;
const end = start + perPage;
const paginatedPosts = posts.slice(start, end);
const hasMore = posts.length > end;
---

<style>
  .post-list {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .post-item {
    display: flex;
    gap: 1.25rem;
    margin-bottom: 3rem;
    align-items: flex-start;
    border-bottom: 1px solid #ddd;
    padding-bottom: 2rem;
  }

  .post-image {
    flex-shrink: 0;
    width: 240px;
    aspect-ratio: 16 / 9;
    overflow: hidden;
    border-radius: 12px;
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 12px;
  }

  .post-content {
    flex-grow: 1;
  }

  .post-title {
    font-size: 1.25rem;
    font-weight: bold;
    margin: 0 0 0.4rem 0;
    color: rgb(var(--black));
    text-decoration: none;
  }

  .post-content a {
    text-decoration: none;
  }

  .post-date {
    font-size: 0.9rem;
    color: rgb(var(--gray));
    margin: 0 0 0.75rem 0;
  }

  .post-summary {
    font-size: 1rem;
    color: #444;
    margin: 0.5rem 0 1rem 0;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .post-tags a {
    background-color: #eef;
    color: #0366d6;
    padding: 0.3rem 0.6rem;
    border-radius: 999px;
    font-size: 0.875rem;
    text-decoration: none;
  }

  .post-tags a:hover {
    background-color: #ddeeff;
  }

  .read-more {
    display: inline-block;
    font-size: 0.95rem;
    color: #007acc;
    text-decoration: underline;
  }

  .post-item a:hover .post-title {
    color: rgb(var(--accent));
    text-decoration: none;
  }

  .load-more {
    text-align: center;
    margin-top: 2rem;
  }

  .load-more a {
    background-color: #007acc;
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    text-decoration: none;
  }

  .load-more a:hover {
    background-color: #005fa3;
  }

  @media (max-width: 720px) {
    .post-item {
      flex-direction: column;
    }

    .post-image {
      width: 100%;
      height: auto;
    }
  }
</style>

<section class="post-list">
  {
    paginatedPosts.map(post => (
      <div class="post-item">
        <a href={`/blog/${post.id}/`} class="post-image">
          {post.data.heroImage && (
            <Image src={post.data.heroImage} width={720} height={405} alt={post.data.title} />
          )}
        </a>
        <div class="post-content">
          <a href={`/blog/${post.id}/`}>
            <h2 class="post-title">{post.data.title}</h2>
          </a>
          <p class="post-date"><FormattedDate date={post.data.pubDate} /></p>
          <div class="post-tags">
            {
              post.data.tags?.map(tag => (
                <a href={`/tags/${tag.toLowerCase()}/`}>#{tag}</a>
              ))
            }
          </div>
          <p class="post-summary">{post.data.description}</p>
          <a href={`/blog/${post.id}/`} class="read-more">Read more â†’</a>
        </div>
      </div>
    ))
  }

  {hasMore && (
    <div class="load-more">
      <a href={`?page=${Number(page) + 1}`}>Load more posts</a>
    </div>
  )}
</section>
